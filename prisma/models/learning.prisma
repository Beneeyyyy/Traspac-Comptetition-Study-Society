model Material {
  id            Int         @id @default(autoincrement())
  title         String
  content       String
  image         String?
  pointValue    Int         @default(0)
  xpValue       Int         @default(0)    // Added XP value
  totalPages    Int         @default(1)
  estimatedTime Int         @default(0)    // in minutes
  subcategoryId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  Subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  Point         Point[]
  studyHistory  StudyHistory[]
  progress      MaterialProgress[]
}

model StudyHistory {
  id            Int       @id @default(autoincrement())
  userId        Int
  materialId    Int
  duration      Int       // in minutes
  completedPages Int      @default(0)
  startedAt     DateTime  @default(now())
  endedAt       DateTime?
  
  user          User      @relation(fields: [userId], references: [id])
  material      Material  @relation(fields: [materialId], references: [id])
}

model MaterialProgress {
  id            Int       @id @default(autoincrement())
  userId        Int
  materialId    Int
  progress      Int       @default(0)    // percentage
  lastPage      Int       @default(0)
  isCompleted   Boolean   @default(false)
  completedAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  user          User      @relation(fields: [userId], references: [id])
  material      Material  @relation(fields: [materialId], references: [id])

  @@unique([userId, materialId])
}

model Point {
  id            Int         @id @default(autoincrement())
  value         Int
  userId        Int
  categoryId    Int
  subcategoryId Int
  materialId    Int
  createdAt     DateTime    @default(now())
  
  Category      Category    @relation(fields: [categoryId], references: [id])
  Subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  Material      Material    @relation(fields: [materialId], references: [id])
  User          User        @relation(fields: [userId], references: [id])
} 