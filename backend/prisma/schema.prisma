// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  image     String?
  rank      String?  @default("Member")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Forum relations
  posts     ForumPost[]
  answers   ForumAnswer[]
  comments  ForumComment[]
  votes     ForumVote[]
}

model ForumPost {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  tags      String[]
  images    String[]
  viewCount Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  answers   ForumAnswer[]
  comments  ForumComment[]
  votes     ForumVote[]
}

model ForumAnswer {
  id        Int      @id @default(autoincrement())
  content   String
  images    String[]
  isAccepted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  post      ForumPost     @relation(fields: [postId], references: [id])
  postId    Int
  comments  ForumComment[]
  votes     ForumVote[]
}

model ForumComment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  post      ForumPost?  @relation(fields: [postId], references: [id])
  postId    Int?
  answer    ForumAnswer? @relation(fields: [answerId], references: [id])
  answerId  Int?
  votes     ForumVote[]
}

model ForumVote {
  id        Int      @id @default(autoincrement())
  isUpvote  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  post      ForumPost?  @relation(fields: [postId], references: [id])
  postId    Int?
  answer    ForumAnswer? @relation(fields: [answerId], references: [id])
  answerId  Int?
  comment   ForumComment? @relation(fields: [commentId], references: [id])
  commentId Int?

  @@unique([userId, postId])
  @@unique([userId, answerId])
  @@unique([userId, commentId])
} 